{"version":3,"sources":["./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user.reducer.ts","./src/app/user/user.module.ts","./src/environments/environment.ts","./src/app/aip-show/aip-show.component.ts","./src/app/aip-show/aip-show.component.html","./src/app/user.selectors.ts","./src/app/reducers/index.ts","./src/app/user.effects.ts","./src/app/user-data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user-list/user-list.component.html","./src/app/user-list/user-list.component.ts","./src/app/user/user-routing.module.ts","./src/app/app.module.ts","./src/app/user.actions.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/user-add/user-add.component.ts","./src/app/user-add/user-add.component.html","./src/app/app-routing.module.ts","./src/app/user/list/list.component.ts","./src/app/user/list/list.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\n// import { UserActions } from 'src/app/user.actions';\nimport * as UserActions from 'src/app/user.actions';\nimport *  as fromUser from 'src/app/user.selectors';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\ndata:any\n  constructor(private store:Store) { }\n\n  ngOnInit(): void {\n    // this.store.dispatch(new UserActions.LoadUsers()); //action dispatch\n\n    // this.store.pipe(select(fromUser.getUser)).subscribe(data=>{\n    //     this.data=data\n    //   });\n  }\n\n}\n","<p>login works!</p>\n","import { Action } from '@ngrx/store';\nimport { IUser } from './user';\nimport { UserActions, UserActionTypes } from './user.actions';\n// import { } from './user'\n\nexport const userFeatureKey = 'usersState';\n\nexport interface State {\n users:IUser[],\n error:string,\n  loading: boolean;\n  loaded: boolean;\n}\n\nexport const initialState: State = {\n  users: [],\n  error:'',\n  loading: false,\n  loaded : false\n};\n\nexport function reducer(state = initialState, action: UserActions): State {\n  switch (action.type) {\n    case UserActionTypes.LoadUsers:\n      return{\n        ...state,\n        loading: true\n      }\n    case UserActionTypes.LoadUsersSuccess:\n      return {\n        ...state,\n        users : action.payload.data,\n        error : '',\n        loaded: true,\n          loading: false,\n      }\n      case UserActionTypes.LoadUsersFailure:\n      return {\n        ...state,\n        users : [],\n        error : action.payload.error,\n        loading: false\n      }\n    default:\n      return state;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ListComponent } from './list/list.component';\n\n\n@NgModule({\n  declarations: [LoginComponent, ListComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule\n  ]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { UserDataService } from '../user-data.service';\nimport {Store , select} from '@ngrx/store';\nimport * as UserActions from '../user.actions';\nimport *  as fromUser from '../user.selectors';\nimport { combineLatest } from 'rxjs';\n@Component({\n  selector: 'app-aip-show',\n  templateUrl: './aip-show.component.html',\n  styleUrls: ['./aip-show.component.css'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AipShowComponent implements OnInit {\n\n  data:any=[]\n  constructor(private userservice:UserDataService, private store: Store) {\n    // this.userservice.ApiDemo().subscribe(data=>{\n    //   this.data=data\n    // });\n   }\n  //  This schematic generates source files that include enhancements to NgRx for data persistence strategies, and simplified testing.\n  ngOnInit(): void {\n    const loading$ = this.store.select(fromUser.getLoading);\n    const loaded$ = this.store.select(fromUser.getLoaded);\n    combineLatest([loading$,loaded$]).subscribe(data => {\n      if(!data[0] && !data[1]){\n        this.store.dispatch(new UserActions.LoadUsers()); //action dispatch\n      }\n    })\n\n    this.store.pipe(select(fromUser.getUser)).subscribe(data=>{\n        this.data=data\n      });\n  }\n\n}\n","<p>aip-show works!</p>\n<table border=\"1\">\n    <tr>\n        <td>ID</td>\n        <td>Title</td>\n        <td>UserID</td>\n        <td>Complete</td>\n    </tr>\n    <tr *ngFor=\"let user of data\">\n        <td>{{user.id}}</td>\n        <td>{{user.title}}</td>\n        <td>{{user.userId}}</td>\n        <td>{{user.completed}}</td>\n    </tr>\n</table>","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { State } from './user.reducer';\n\nconst getUserFeatureState = createFeatureSelector<State>('usersState');\n\nexport const getUser = createSelector(\n    getUserFeatureState,\n    state => state.users\n)\nexport const getError = createSelector(\n    getUserFeatureState,\n    state => state.error\n)\nexport const getLoading =  createSelector(\n    getUserFeatureState,\n    state => state.loading \n)\nexport const getLoaded =  createSelector(\n    getUserFeatureState,\n    state => state.loaded\n)\n// export const getLoaded = (state: UserReducerState) => state.loaded;\n// export const getUserLoading = createSelector(\n//     getUserFeatureState,\n//     // state => state.\n// )\n\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport * as fromUser from '../user.reducer';\n\n\nexport interface State {\n\n  [fromUser.userFeatureKey]: fromUser.State;\n}\n\nexport const reducers: ActionReducerMap<State,any> = {\n\n  [fromUser.userFeatureKey]: fromUser.reducer,\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport * as userActions from './user.actions';\nimport { UserDataService } from './user-data.service';\nimport {mergeMap, map, catchError} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class UserEffects {\n\n\n\n  constructor(private actions$: Actions,private userService:UserDataService) {}\n\n  @Effect()\n  loadUsers$ :Observable<Action> =this.actions$.pipe(\n    ofType(userActions.UserActionTypes.LoadUsers),\n    mergeMap(\n      action => this.userService.ApiDemo().pipe(\n        map(users => (new userActions.LoadUsersSuccess({data: users}))),\n        catchError(err => of(new userActions.LoadUsersFailure({error:err})))\n      )\n    )\n  )\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n  \n  url=\"http://localhost:3000/posts\";\n  constructor(private http:HttpClient) { }\n\n  getData(){\n    return{  \n      name:\"jaydip vala\",\n      age:20,\n      id:101,\n    }\n  }\n  ApiDemo()\n  {\n    return this.http.get(this.url)\n  }\n  inserRecord(data:any){\n    return this.http.post(this.url,data);\n  }\n}\n\n /// /","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms'\nimport{UserDataService} from \"./user-data.service\"\n// import {UserService} from \"./user-data.service\"\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n  fruite_arr:any=[]\n  \n  name=''\n  age:number;\n  constructor(private user:UserDataService) {\n    console.log (user.getData())\n    let data=user.getData();\n    this.name=data.name\n    this.age=data.age\n    console.log(this.name)\n    console.log(this.age)\n\n    this.user.ApiDemo().subscribe(data=>{\n      console.log(data)\n    });\n    \n    this.fruite_arr = [\n      {\n        name: 'harley',\n        age: 23,\n        email: 'harley123@gmail.com'\n      },\n      {\n        name: \"jaydip\",\n        age: 21,\n        email: 'harley123@gmail.com'\n      },\n      {\n        name: 'radha',\n        age: 100,\n        email: 'harley123@gmail.com'\n      },\n\n      {\n        name: \"krishna\",\n        age: 93,\n        email: 'harley123@gmail.com'\n\n      },\n    ]\n\n    this.fruite_arr.sort((a:any, b:any) => {\n      return a.age - b.age;\n    });\n   \n  }\n  title = 'blog';\n\n  obj1 = {\n    'name': \"jaydip vala\",\n    \"age\": 21,\n    \"born\": \"bhavangar\"\n  }\n  yourName = \"jaydip vala\"\n  getName(name: any) {\n    console.log(name)\n  }\n  fbcolor = 'blue';\n  currentVal = \"\"\n  myEvent(evt: any) {\n    this.currentVal = evt?.target?.value;\n    // this.currentVal= evt\n    console.log(evt)\n    this.fbcolor = 'red'\n\n    // this.currentVal = evt;\n  }\n  disable = true\n  enable_value() {\n    this.disable = false\n  }\n  show = 'yellow';\n  fontColor = 'blue';\n  sayHelloId = 2;\n\n  message = 'I\\'m read only!';\n  canEdit = true;\n\n  onEditClick() {\n    this.canEdit = !this.canEdit;\n    if (this.canEdit) {\n      this.message = 'You can edit me!';\n    } else {\n      this.message = 'I\\'m read only!';\n    }\n  }\n  color = 'white';\n  usersVal =\"\";\n  getUserValue(value:string){\n    this.usersVal =value\n    console.log(this.usersVal)\n    \n\n      this.color = 'green'\n  }\n\n  formatLabel(value: number | null) {\n    if (!value) {\n      return 0;\n    }\n\n    if (value >= 1000) {\n      return Math.round(value / 1000) + 'k';\n    }\n\n    return value;\n  }\n}\n\n\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <!-- Brand/logo -->\n    <a class=\"navbar-brand\" href=\"#\">\n        <img src=\"/blog/Capture.PNG\" alt=\"logo\" style=\"width:40px;\">\n    </a>\n\n    <!-- Links -->\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"app-user-add\">User-Add</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"app-user-list\">User-List</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"app-aip-show\">Api-List</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"user/login\">login</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"user/list\">List</a>\n        </li>\n\n    </ul>\n</nav>\n<h1>\n    this my first {{title}} website </h1>\n\n<button mat-button>hello</button>\n\n<mat-slider thumbLabel [displayWith]=\"formatLabel\" tickInterval=\"1000\" min=\"1\" max=\"100000\"></mat-slider>\n<router-outlet></router-outlet>\n\n\n<!-- <form #simpleForm=\"ngForm\" (ngSubmit)=\"getUserValue(simpleForm.value)\" class=\"center\" [style.backgroundColor]=\"color\">\n    <input type=\"text\" ngModel name=\"firstname\" placeholder=\"FirstName\" style=\"width: 200px; height: 30px;\"><br><br>\n    <input type=\"text\" ngModel name=\"lastname\" placeholder=\"LastName\" style=\"width: 200px; height: 30px;\"><br><br>\n    <input type=\"email\" ngModel name=\"email\" placeholder=\"Email\" style=\"width: 200px; height: 30px;\"><br><br>\n    <input type=\"number\" ngModel name=\"phone\" placeholder=\"Phone\" style=\"width: 200px; height: 30px;\"><br><br>\n    <input type=\"text\" ngModel name=\"address\" placeholder=\"Address\" style=\"width: 200px; height: 30px;\"><br><br>\n    <select ngModel>\n        <ng-container *ngFor=\"let option of options\">\n          <option *ngIf=\"!option.isDivider\" [ngValue]=\"option\">{{option.name}}</option>\n       \n      \n        </ng-container>\n      </select>\n    <br>\n    <br>\n    <button class=\"btn btn-primary\">Submit</button> -->\n\n\n<!-- </form> -->","<!-- <button (click)='submit()' style=\"color: green;\">Get My name</button> -->\n\n<table class=\"table table-dark\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">UserId</th>\n            <th scope=\"col\">Completed</th>\n            <!-- <th scope=\"col\">Mobile Number</th>\n            <th scope=\"col\">Address</th>\n            <th scope=\"col\">Country</th> -->\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of user1; let i = index\">\n            <td scope=\"row\">{{user.id}}</td>\n            <td>{{user.title}}</td>\n            <td>{{user.userId}}</td>\n            <td>{{user.completed}}</td>\n            <!-- <td>{{user.phone}}</td> -->\n            <!-- <td>{{user.address}}</td>\n            <td>{{user.country}}</td>\n            <td><button (click)=\"ondelete(i+1)\" class=\"btn btn-danger\">Delete</button></td>\n            <td><button class=\"btn btn-primary\">Edit</button></td> -->\n        </tr>\n\n    </tbody>\n</table>","import { Component, DoCheck, OnChanges, OnInit } from '@angular/core';\nimport { UserDataService } from '../user-data.service';\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit , OnChanges,DoCheck{\nuser1 : any;\n  constructor( private userSevice:UserDataService) { \n    console.log(\"constructor....\")\n  }\n\n  ngOnInit(): void {\n    console.log(\"oninit called..\")\n    this.userSevice.ApiDemo().subscribe(result => {\n      this.user1 = result;\n    })\n  }\n\n  ngOnChanges(){\n    console.log('changes...')\n  }\n  // user1 = JSON.parse(localStorage.getItem('Users') || '{}');\n  ngDoCheck(){\n    console.log(\"do check..\")\n  }\n  ondelete(id:number){\n    // let results:any = this.user1.slice(id)\n    // localStorage.setItem(\"Users\",JSON.stringify(results));\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {ListComponent} from './list/list.component'\nconst routes: Routes = [\n  {\n    path:'user',children:[\n      {path:'login',component:LoginComponent},\n      {path:'list',component:ListComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserListComponent } from './user-list/user-list.component';\n\nimport {FormsModule} from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { UserAddComponent } from './user-add/user-add.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport{MatButtonModule} from '@angular/material/button'\nimport{ MatSliderModule} from '@angular/material/slider'\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { AipShowComponent } from './aip-show/aip-show.component'\nimport { UserModule } from './user/user.module';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { UserEffects } from './user.effects';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    HeaderComponent,\n    FooterComponent,\n    UserAddComponent,\n    AipShowComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgbModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatSliderModule,\n    HttpClientModule,\n    UserModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([UserEffects, ]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Action } from '@ngrx/store';\nimport { IUser } from './user';\n\nexport enum UserActionTypes {\n  LoadUsers = '[User] Load Users',\n  LoadUsersSuccess = '[User] Load Users Success',\n  LoadUsersFailure = '[User] Load Users Failure',\n}\n\nexport class LoadUsers implements Action {\n  readonly type = UserActionTypes.LoadUsers;\n}\n\nexport class LoadUsersSuccess implements Action {\n  readonly type = UserActionTypes.LoadUsersSuccess;\n  constructor(public payload: { data: any }) { }\n}\n\nexport class LoadUsersFailure implements Action {\n  readonly type = UserActionTypes.LoadUsersFailure;\n  constructor(public payload: { error: any }) { }\n}\n\nexport type UserActions = LoadUsers | LoadUsersSuccess | LoadUsersFailure;\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  color = 'red'\n  changeColor(){\n    this.color= \"blue\"\n  }\n\n}\n","<h3 [style.backgroudColor]=\"'green'\">welcome to header!</h3>\n<h1 [style.color]=\"color\">Dynamic style</h1>\n<button (click)=\"changeColor()\">changeColor</button>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>welcome to footer !</h3>","import { Component, OnInit,Input,Output,EventEmitter } from '@angular/core';\n\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms'\nimport { NgbAlertConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { UserDataService } from '../user-data.service';\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.css']\n})\nexport class UserAddComponent implements OnInit {\n  \n  // @Input() HERO: any\n\n    @Output() getName:EventEmitter<any>=new EventEmitter()\n    show=\"green\";\n  \n\n\n  myReactiveForm: FormGroup = new FormGroup({});\n  user: {\n    userId: string,\n    Title:string,\n    completed:string,\n    // phone:number,\n    // address:string,\n    // country:string\n  }[]=[];\n  user1 = JSON.parse(localStorage.getItem('Users') || '{}');\n  \n  constructor(alertConfig: NgbAlertConfig,private userservice:UserDataService) {\n      alertConfig.type = 'success';\n      // console.log(this.HERO)\n      // alertConfig.dismissible = false;\n      \n    } \n    \n    \n    ngOnInit(): void {\n      this.myReactiveForm = new FormGroup({ \n        // 'this.myReactiveForm':new FormControl(null,Validators.required),\n        'userId':new FormControl(null),\n        'title':new FormControl(null),\n        'completed':new FormControl(null),\n        // 'phone':new FormControl(null, Validators.compose([\n        //  ,\n        //   Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")\n        // ])),\n        // 'address':new FormControl(''),\n        // 'country':new FormControl('India'),\n      });\n    }\n    onSubmit(){\n    this.getName.emit(\"hello\")\n    \n    this.show ='red'\n    if(localStorage.getItem('Users') ){\n      this.user = JSON.parse(localStorage.getItem(\"Users\")||'{}') ;\n    \n      // thg\n    // localStorage.setItem(\"Users\",JSON.stringify(this.user))  \n\n    }\n    this.user.push(this.myReactiveForm.value);\n    localStorage.setItem(\"Users\",JSON.stringify(this.user));\n    this.userservice.inserRecord(this.myReactiveForm.value).subscribe(result => {\n      console.log(result);\n    })\n    }\n\n  \n}\n\n\n\n","<p>user-add works!</p>\n\n<h1 class=\"center mt-5\">simple form in angular</h1>\n<form class=\"center\" [formGroup]=\"myReactiveForm\" >\n    <input type=\"number\" name=\"firstname\" placeholder=\"UserID\" style=\"width: 200px; height: 30px;\" formControlName=\"userId\"><br><br>\n    <input type=\"text\" name=\"lastname\" placeholder=\"Title\" style=\"width: 200px; height: 30px;\" formControlName=\"title\"><br><br>\n    <!-- <div> -->\n        <input type=\"text\" name=\"email\" placeholder=\"Completed\" style=\"width: 200px; height: 30px;\" formControlName=\"completed\">\n        <!-- <br> <small *ngIf=\"!myReactiveForm.get('email')?.valid && myReactiveForm.get('email')?.touched\" style=\"color: red;\">Please Enter Valid Email</small> -->\n    <!-- </div><br> -->\n    <!-- <div> -->\n\n        <!-- <input type=\"text\" name=\"phone\" maxlength=\"10\" placeholder=\"Phone\" style=\"width: 200px; height: 30px;\" formControlName=\"phone\">\n        <div *ngIf=\"!myReactiveForm.get('phone')?.valid && myReactiveForm.get('phone')?.touched\" style=\"color: red;\">\n            <small *ngIf=\"!myReactiveForm.get('phone')?.errors?.required\">Mobile Number is not Valid.</small>\n            <small *ngIf=\"!myReactiveForm.get('phone')?.errors?.pattern\">Please, Enter 10 digit Mobile Number.</small>\n        </div>\n    </div><br><br>\n    <input type=\"text\" name=\"address\" placeholder=\"Address\" style=\"width: 200px; height: 30px;\" formControlName=\"address\"><br><br> -->\n    <!-- <select>\n      <ng-container *ngFor=\"let option of options\" formControlName=\"country\" formControlName=\"country\">\n        <option *ngIf=\"!option.isDivider\" [ngValue]=\"option\">{{option.name}}</option>\n     \n    \n      </ng-container>\n    </select> -->\n    <!-- <select name=\"\" id=\"country\" formControlName=\"country\" style=\"width: 200px; height: 30px;\">\n        <option value=\"India\">India</option>\n        <option value=\"USA\">USA</option>\n        <option value=\"UK\">UK</option>\n        <option value=\"Pakistan\">Pakistan</option>\n    </select> -->\n    <br>\n    <br>\n    <a type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\">Submit</a>\n\n\n    <ng-template [ngIf]='show==\"red\"'>\n        <p>\n            <ngb-alert>\n                Form Submitted Successfully\n            </ngb-alert>\n        </p>\n    </ng-template>\n\n\n</form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AipShowComponent } from './aip-show/aip-show.component';\nimport { UserAddComponent } from './user-add/user-add.component';\nimport { UserListComponent } from './user-list/user-list.component';\n\nconst routes: Routes = [\n  { path: 'app-user-add', component: UserAddComponent },\n  { path: 'app-user-list', component: UserListComponent },\n  { path: 'app-aip-show', component: AipShowComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>list works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}